"use strict";(self.webpackChunkshekhar_patil_github_io=self.webpackChunkshekhar_patil_github_io||[]).push([[7473],{511:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/worker-pool-pattern-d4e6b452e1e1cdd40d9024b11b80581f.jpg"},696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>g,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var r=n(3290),o=n(4848),a=n(8453);const i={slug:"worker-pool-pattern",title:"Worker pool pattern in Golang",authors:"shekhar-patil",tags:["golang","Design Pattern","Concurrency"],image:"./worker-pool-pattern.jpg"},s=void 0,l={image:n(511).A,authorsImageUrls:[void 0]},p=[{value:"What is worker pool pattern?",id:"what-is-worker-pool-pattern",level:3}];function c(e){const t={h3:"h3",img:"img",p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h3,{id:"what-is-worker-pool-pattern",children:"What is worker pool pattern?"}),"\n",(0,o.jsx)(t.p,{children:"The Worker Pool pattern is a concurrency pattern in Go that allows you to manage and control the number of goroutines working on a set of tasks. This pattern is particularly useful when you have a large number of tasks to process and want to limit the number of concurrent goroutines to prevent excessive resource usage."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Worker pool pattern",src:n(5833).A+"",width:"837",height:"307"})})]})}function g(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},3290:e=>{e.exports=JSON.parse('{"permalink":"/blog/worker-pool-pattern","source":"@site/blog/2024-08-08-worker-pool-pattern/index.md","title":"Worker pool pattern in Golang","description":"What is worker pool pattern?","date":"2024-08-08T00:00:00.000Z","tags":[{"inline":false,"label":"Golang","permalink":"/blog/tags/golang","description":"Go is a statically typed, compiled high-level programming language designed at Google..."},{"inline":true,"label":"Design Pattern","permalink":"/blog/tags/design-pattern"},{"inline":true,"label":"Concurrency","permalink":"/blog/tags/concurrency"}],"readingTime":1.99,"hasTruncateMarker":true,"authors":[{"name":"Shekhar Patil","title":"Full stack developer.","url":"https://github.com/shekhar-patil","github":"shekhar-patil","linkedin":"https://www.linkedin.com/in/shekhar-patil-834462135/","imageURL":"https://avatars.githubusercontent.com/u/16961675?s=400&u=70e54719e239d1148c24bc8661a72ee9e59f420d&v=4","key":"shekhar-patil","page":null}],"frontMatter":{"slug":"worker-pool-pattern","title":"Worker pool pattern in Golang","authors":"shekhar-patil","tags":["golang","Design Pattern","Concurrency"],"image":"./worker-pool-pattern.jpg"},"unlisted":false,"prevItem":{"title":"Failing Google\u2019s Final Round\u200a\u2014\u200aWhat I Learned","permalink":"/blog/google-interview"},"nextItem":{"title":"How to create and use Rake task in ruby and use it in the Rails?","permalink":"/blog/rake-task-in-rails"}}')},5833:(e,t,n)=>{n.d(t,{A:()=>r});const r=n.p+"assets/images/worker-pool-pattern-d4e6b452e1e1cdd40d9024b11b80581f.jpg"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(6540);const o={},a=r.createContext(o);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);