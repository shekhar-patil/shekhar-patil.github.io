"use strict";(self.webpackChunkshekhar_patil_github_io=self.webpackChunkshekhar_patil_github_io||[]).push([[2720],{7698:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"data-structures-and-algorithms/searching-algorithms/linear-search","title":"Linear Search","description":"Linear Search is one of the simplest and most intuitive algorithms used to find an element in a list or array. It checks each element sequentially until the desired value is found or the list ends.","source":"@site/docs/data-structures-and-algorithms/searching-algorithms/linear-search.md","sourceDirName":"data-structures-and-algorithms/searching-algorithms","slug":"/data-structures-and-algorithms/searching-algorithms/linear-search","permalink":"/docs/data-structures-and-algorithms/searching-algorithms/linear-search","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"dsaSidebar","previous":{"title":"Searching Algorithms","permalink":"/docs/category/searching-algorithms"},"next":{"title":"Binary Search","permalink":"/docs/data-structures-and-algorithms/searching-algorithms/binary-search"}}');var i=r(4848),s=r(8453);const a={sidebar_position:1},l="Linear Search",h={},o=[{value:"\ud83d\udd0d How Linear Search Works",id:"-how-linear-search-works",level:2},{value:"\ud83d\udcca Example",id:"-example",level:2},{value:"Step-by-step:",id:"step-by-step",level:3},{value:"\ud83d\udd27 Go Implementation",id:"-go-implementation",level:2},{value:"\ud83e\uddea Output",id:"-output",level:2},{value:"\u23f1 Time and Space Complexity",id:"-time-and-space-complexity",level:2},{value:"\u2705 When to Use Linear Search",id:"-when-to-use-linear-search",level:2},{value:"\ud83d\udd1a Conclusion",id:"-conclusion",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"linear-search",children:"Linear Search"})}),"\n",(0,i.jsxs)(n.p,{children:["Linear Search is one of the simplest and most intuitive algorithms used to find an element in a list or array. It checks each element ",(0,i.jsx)(n.strong,{children:"sequentially"})," until the desired value is found or the list ends."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-how-linear-search-works",children:"\ud83d\udd0d How Linear Search Works"}),"\n",(0,i.jsxs)(n.p,{children:["Given a list of elements, linear search goes from ",(0,i.jsx)(n.strong,{children:"left to right"}),", comparing each element with the target. If a match is found, it returns the index. Otherwise, it returns -1."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-example",children:"\ud83d\udcca Example"}),"\n",(0,i.jsx)(n.p,{children:"Let's say we have the following array:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"\n[5, 2, 9, 4, 7]\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["We want to search for the element ",(0,i.jsx)(n.code,{children:"4"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"step-by-step",children:"Step-by-step:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Compare 5 with 4 \u2192 \u274c"}),"\n",(0,i.jsx)(n.li,{children:"Compare 2 with 4 \u2192 \u274c"}),"\n",(0,i.jsx)(n.li,{children:"Compare 9 with 4 \u2192 \u274c"}),"\n",(0,i.jsxs)(n.li,{children:["Compare 4 with 4 \u2192 \u2705 Match found at index ",(0,i.jsx)(n.code,{children:"3"})]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-go-implementation",children:"\ud83d\udd27 Go Implementation"}),"\n",(0,i.jsx)(n.p,{children:"Here\u2019s a simple Go program that performs linear search:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-go",children:'package main\n\nimport "fmt"\n\nfunc linearSearch(arr []int, target int) int {\n    for i, val := range arr {\n        if val == target {\n            return i\n        }\n    }\n    return -1 // Not found\n}\n\nfunc main() {\n    nums := []int{5, 2, 9, 4, 7}\n    target := 4\n\n    index := linearSearch(nums, target)\n    if index != -1 {\n        fmt.Printf("Element found at index %d\\n", index)\n    } else {\n        fmt.Println("Element not found")\n    }\n}\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-output",children:"\ud83e\uddea Output"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Element found at index 3\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-time-and-space-complexity",children:"\u23f1 Time and Space Complexity"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Case"}),(0,i.jsx)(n.th,{children:"Time Complexity"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Best Case"}),(0,i.jsx)(n.td,{children:"O(1)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Average"}),(0,i.jsx)(n.td,{children:"O(n)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Worst Case"}),(0,i.jsx)(n.td,{children:"O(n)"})]})]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Space Complexity"}),": O(1)"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-when-to-use-linear-search",children:"\u2705 When to Use Linear Search"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["When the dataset is ",(0,i.jsx)(n.strong,{children:"unsorted"})]}),"\n",(0,i.jsxs)(n.li,{children:["When the list is ",(0,i.jsx)(n.strong,{children:"small"})]}),"\n",(0,i.jsx)(n.li,{children:"When performance isn\u2019t a primary concern"}),"\n",(0,i.jsxs)(n.li,{children:["When you want a ",(0,i.jsx)(n.strong,{children:"quick and simple"})," solution"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"-conclusion",children:"\ud83d\udd1a Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"Linear search is a basic yet powerful algorithm, ideal for simple scenarios or when working with small, unsorted data. Though not the most efficient for large datasets, it\u2019s a great starting point when learning how search algorithms work."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:["You can view and clone the full code from my GitHub repo here:\n\ud83d\udc49 ",(0,i.jsx)(n.a,{href:"https://github.com/shekhar-patil/data_structure_and_algorithms/blob/main/searching_algorithms/linear_search.go",children:"Linear Search in Go"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.p,{children:"Happy Learning! \ud83d\ude80"})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>l});var t=r(6540);const i={},s=t.createContext(i);function a(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);