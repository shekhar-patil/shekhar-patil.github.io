"use strict";(self.webpackChunkshekhar_patil_github_io=self.webpackChunkshekhar_patil_github_io||[]).push([[5655],{4326:e=>{e.exports=JSON.parse('{"permalink":"/blog/const-get-method-in-ruby","source":"@site/blog/2020-02-11-const-get-method-in-ruby.md","title":"Do you know how helpful the const_get method is?","description":"First, we will understand how the const_get method works then I will explain how we can use it in different ways and what are the use cases.","date":"2020-02-11T00:00:00.000Z","tags":[{"inline":false,"label":"Ruby","permalink":"/blog/tags/ruby","description":"A dynamic, open source programming language with a focus on simplicity and productivity. It has an elegant syntax that is natural to read and easy to write."}],"readingTime":1.73,"hasTruncateMarker":true,"authors":[{"name":"Shekhar Patil","title":"Full stack developer.","url":"https://github.com/shekhar-patil","github":"shekhar-patil","linkedin":"https://www.linkedin.com/in/shekhar-patil-834462135/","imageURL":"https://avatars.githubusercontent.com/u/16961675?s=400&u=70e54719e239d1148c24bc8661a72ee9e59f420d&v=4","key":"shekhar-patil","page":null}],"frontMatter":{"slug":"const-get-method-in-ruby","title":"Do you know how helpful the const_get method is?","authors":"shekhar-patil","tags":["ruby"]},"unlisted":false,"prevItem":{"title":"Postgres users and their permission issue.","permalink":"/blog/postgres-permission-denied"},"nextItem":{"title":"Difference between puts, p, and print in ruby.","permalink":"/blog/compare-puts-p-print-in-ruby"}}')},5432:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var s=n(4326),a=n(4848),o=n(8453);const i={slug:"const-get-method-in-ruby",title:"Do you know how helpful the const_get method is?",authors:"shekhar-patil",tags:["ruby"]},r=void 0,l={authorsImageUrls:[void 0]},c=[];function h(e){const t={a:"a",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.p,{children:"First, we will understand how the const_get method works then I will explain how we can use it in different ways and what are the use cases."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"module Vehicle\n  class Car\n    WHEELS = 4\n  end\nend\n\nputs Object.const_get 'Vehicle::Car::WHEELS'   # => 4\n"})}),"\n",(0,a.jsx)(t.p,{children:"Here, we can see that we have passed the string 'Vehicle::Car::WHEELS' parameter to method const_get and it has given the outcome '4' which is the actual value of constant wheels."}),"\n",(0,a.jsx)(t.p,{children:"We can also use some variable to store this string and get the constant's value bypassing this variable as a parameter to the const_get method."}),"\n",(0,a.jsx)(t.p,{children:"We can also lookup the ancestor's constant using const_get method if the inherit flag is set as true."}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"Note:"})," ancestors of some module means a list of modules included or prepend in that module."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"module Vehicle\n  class Car\n    WHEELS = 4\n  end\n\n  class TeslaS < Car\n  end\nend\n\nwheel_const = 'Vehicle::TeslaS::WHEELS'\n\n# Here true is inherit flag which can be true or false\nputs Object.const_get(wheel_const, true)  # => 4\n"})}),"\n",(0,a.jsx)(t.p,{children:"Here we have given the inherit flag as true it means lookup the base class and the module Vehicle's ancestors as well. If we would have included/prepend some modules in our Vehicle module then the const_get method also would have lookup into those modules."}),"\n",(0,a.jsx)(t.p,{children:"Now, let's try to change that flag into false."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-ruby",children:"\nmodule Vehicle\n  class Car\n    WHEELS = 4\n  end\n\n  class TeslaS < Car\n  end\nend\n\nwheel_const = 'Vehicle::TeslaS::WHEELS'\nputs Object.const_get(wheel_const, false)\n\n#  Output:\n#  Traceback (most recent call last):\n#\t  1: from random.rb:11:in `<main>'\n#  random.rb:11:in `const_get': uninitialized constant Vehicle::TeslaS::WHEELS (NameError)\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Now, we are getting an error uninitialized constant ",(0,a.jsx)(t.code,{children:"Vehicle::TeslaS::WHEELS"})," because now we have set inherit flag as a false so const_get method will not lookup base class or modules ancestors for ",(0,a.jsx)(t.code,{children:"WHEEL"})," constant. It will throw an error because the ",(0,a.jsx)(t.code,{children:"WHEEL"})," constant is not defined in the TeslaS class."]}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"Note:"})," If we do not mention the inherit flag then it is by default true."]}),"\n",(0,a.jsxs)(t.p,{children:["I hope you loved it.\nPlease feel free to contact me on ",(0,a.jsx)(t.a,{href:"https://twitter.com/Shekharpatil95",children:"twitter"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var s=n(6540);const a={},o=s.createContext(a);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);